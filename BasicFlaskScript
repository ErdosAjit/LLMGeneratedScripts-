"""
This script processes sales data and provides a REST API for invoking the processing.
It is LLM generated and the first version is not tested
"""

from flask import Flask, jsonify, request
import os
import pandas as pd

app = Flask(__name__)

DATA_FILE = "data/sales_data.csv"
OUTPUT_DIR = "output/"

def load_data(file_path):
    """Loads data from a CSV file."""
    if not os.path.exists(file_path):
        raise FileNotFoundError(f"The file {file_path} does not exist.")
    return pd.read_csv(file_path)

class DataProcessor:
    def __init__(self, data):
        self.data = data
    
    def clean_data(self):
        """Cleans the data."""
        self.data.dropna(inplace=True)
        return self.data.describe()  # Return summary statistics as an example output.

@app.route('/process', methods=['POST'])
def process_data():
    """
    Endpoint to process sales data.
    Expects the request body to specify 'file_path' if using a custom file.
    """
    try:
        # Use custom file if provided
        file_path = request.json.get('file_path', DATA_FILE)
        
        # Load the data
        data = load_data(file_path)
        
        # Process the data
        processor = DataProcessor(data)
        summary_stats = processor.clean_data()
        
        # Convert DataFrame summary to JSON
        summary_json = summary_stats.to_dict()
        
        return jsonify({
            "status": "success",
            "summary_statistics": summary_json
        }), 200
    except Exception as e:
        return jsonify({
            "status": "error",
            "message": str(e)
        }), 400

if __name__ == "__main__":
    app.run(debug=True) 
